/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.bewell;
using meridian.bewell.system;

namespace meridian.bewell.proto
{
	[MetadataType(typeof(dictionary_meta))]	public partial class dictionary : admin.db.IDatabaseEntity
	{
		public dictionary()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_word = "";
		internal bool mc_word { get; private set; }
		private string m_translate = "";
		internal bool mc_translate { get; private set; }
		private string m_explanation = "";
		internal bool mc_explanation { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_word = _reader["word"].GetType() != typeof(System.DBNull) ? _reader.GetString("word") : "";
			mc_word = false;
			m_translate = _reader["translate"].GetType() != typeof(System.DBNull) ? _reader.GetString("translate") : "";
			mc_translate = false;
			m_explanation = _reader["explanation"].GetType() != typeof(System.DBNull) ? _reader.GetString("explanation") : "";
			mc_explanation = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "dictionary"; }
		}
		/* metafile template 
		internal class dictionary_meta
		{
			public long id { get; set; }
			public string word { get; set; }
			public string translate { get; set; }
			public string explanation { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string word
		{
			get
			{
				return m_word;
			}
			set
			{
				if(m_word != value)
				{
					m_word = value != null ? value : "";
					mc_word = true;
					// call update worker thread;
				}
			}
		}
		public string translate
		{
			get
			{
				return m_translate;
			}
			set
			{
				if(m_translate != value)
				{
					m_translate = value != null ? value : "";
					mc_translate = true;
					// call update worker thread;
				}
			}
		}
		public string explanation
		{
			get
			{
				return m_explanation;
			}
			set
			{
				if(m_explanation != value)
				{
					m_explanation = value != null ? value : "";
					mc_explanation = true;
					// call update worker thread;
				}
			}
		}
	}
}
