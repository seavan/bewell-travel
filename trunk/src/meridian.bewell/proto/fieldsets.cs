/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.bewell;
using meridian.bewell.system;

namespace meridian.bewell.proto
{
	[MetadataType(typeof(fieldsets_meta))]	public partial class fieldsets : admin.db.IDatabaseEntity
	{
		public fieldsets()
		{
			fieldsets_items = new List<entity_fields>();
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private string m_url = "";
		internal bool mc_url { get; private set; }
		private string m_proto_name = "";
		internal bool mc_proto_name { get; private set; }
		private int m_order_number = 0;
		internal bool mc_order_number { get; private set; }
		private bool m_show_gallery = false;
		internal bool mc_show_gallery { get; private set; }
		private bool m_show_map = false;
		internal bool mc_show_map { get; private set; }
		private bool m_show_in_anounce = false;
		internal bool mc_show_in_anounce { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_url = _reader["url"].GetType() != typeof(System.DBNull) ? _reader.GetString("url") : "";
			mc_url = false;
			m_proto_name = _reader["proto_name"].GetType() != typeof(System.DBNull) ? _reader.GetString("proto_name") : "";
			mc_proto_name = false;
			m_order_number = _reader["order_number"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("order_number") : 0;
			mc_order_number = false;
			m_show_gallery = _reader["show_gallery"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("show_gallery") : false;
			mc_show_gallery = false;
			m_show_map = _reader["show_map"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("show_map") : false;
			mc_show_map = false;
			m_show_in_anounce = _reader["show_in_anounce"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("show_in_anounce") : false;
			mc_show_in_anounce = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "fieldsets"; }
		}
		/* metafile template 
		internal class fieldsets_meta
		{
			public long id { get; set; }
			public string title { get; set; }
			public string url { get; set; }
			public string proto_name { get; set; }
			public int order_number { get; set; }
			public bool show_gallery { get; set; }
			public bool show_map { get; set; }
			public bool show_in_anounce { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public string url
		{
			get
			{
				return m_url;
			}
			set
			{
				if(m_url != value)
				{
					m_url = value != null ? value : "";
					mc_url = true;
					// call update worker thread;
				}
			}
		}
		public string proto_name
		{
			get
			{
				return m_proto_name;
			}
			set
			{
				if(m_proto_name != value)
				{
					m_proto_name = value != null ? value : "";
					mc_proto_name = true;
					// call update worker thread;
				}
			}
		}
		public int order_number
		{
			get
			{
				return m_order_number;
			}
			set
			{
				if(m_order_number != value)
				{
					m_order_number = value != null ? value : 0;
					mc_order_number = true;
					// call update worker thread;
				}
			}
		}
		public bool show_gallery
		{
			get
			{
				return m_show_gallery;
			}
			set
			{
				if(m_show_gallery != value)
				{
					m_show_gallery = value != null ? value : false;
					mc_show_gallery = true;
					// call update worker thread;
				}
			}
		}
		public bool show_map
		{
			get
			{
				return m_show_map;
			}
			set
			{
				if(m_show_map != value)
				{
					m_show_map = value != null ? value : false;
					mc_show_map = true;
					// call update worker thread;
				}
			}
		}
		public bool show_in_anounce
		{
			get
			{
				return m_show_in_anounce;
			}
			set
			{
				if(m_show_in_anounce != value)
				{
					m_show_in_anounce = value != null ? value : false;
					mc_show_in_anounce = true;
					// call update worker thread;
				}
			}
		}
		[ScriptIgnore]
		[ScaffoldColumn(false)]
		public List<entity_fields> fieldsets_items
		{
			get; set; 
		}
		public void add_entity_fields_item(long id)
		{
			if (Meridian.Default.entity_fieldsStore.Exists(id))
			{
				if (!fieldsets_items.Any(s => s.id.Equals(id)))
				{
					fieldsets_items.Add(Meridian.Default.entity_fieldsStore.Get(id));
					SaveCompositions(Meridian.Default);
				}
			}
		}
		public void remove_entity_fields_item(long id)
		{
			if (fieldsets_items.Any(s => s.id.Equals(id)))
			{
				fieldsets_items.Remove(fieldsets_items.Single(s => s.id.Equals(id)));;
				SaveCompositions(Meridian.Default);
			}
		}
	}
}
