/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.bewell;
using meridian.bewell.system;

namespace meridian.bewell.proto
{
	[MetadataType(typeof(seo_metadata_meta))]	public partial class seo_metadata : admin.db.IDatabaseEntity
	{
		public seo_metadata()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_entity_id = 0;
		internal bool mc_entity_id { get; private set; }
		private string m_proto_name = "";
		internal bool mc_proto_name { get; private set; }
		private string m_url = "";
		internal bool mc_url { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private string m_keywords = "";
		internal bool mc_keywords { get; private set; }
		private string m_description = "";
		internal bool mc_description { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_entity_id = _reader["entity_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("entity_id") : 0;
			mc_entity_id = false;
			m_proto_name = _reader["proto_name"].GetType() != typeof(System.DBNull) ? _reader.GetString("proto_name") : "";
			mc_proto_name = false;
			m_url = _reader["url"].GetType() != typeof(System.DBNull) ? _reader.GetString("url") : "";
			mc_url = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_keywords = _reader["keywords"].GetType() != typeof(System.DBNull) ? _reader.GetString("keywords") : "";
			mc_keywords = false;
			m_description = _reader["description"].GetType() != typeof(System.DBNull) ? _reader.GetString("description") : "";
			mc_description = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "seo_metadata"; }
		}
		/* metafile template 
		internal class seo_metadata_meta
		{
			public long id { get; set; }
			public long entity_id { get; set; }
			public string proto_name { get; set; }
			public string url { get; set; }
			public string title { get; set; }
			public string keywords { get; set; }
			public string description { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long entity_id
		{
			get
			{
				return m_entity_id;
			}
			set
			{
				if(m_entity_id != value)
				{
					m_entity_id = value != null ? value : 0;
					mc_entity_id = true;
					// call update worker thread;
				}
			}
		}
		public string proto_name
		{
			get
			{
				return m_proto_name;
			}
			set
			{
				if(m_proto_name != value)
				{
					m_proto_name = value != null ? value : "";
					mc_proto_name = true;
					// call update worker thread;
				}
			}
		}
		public string url
		{
			get
			{
				return m_url;
			}
			set
			{
				if(m_url != value)
				{
					m_url = value != null ? value : "";
					mc_url = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public string keywords
		{
			get
			{
				return m_keywords;
			}
			set
			{
				if(m_keywords != value)
				{
					m_keywords = value != null ? value : "";
					mc_keywords = true;
					// call update worker thread;
				}
			}
		}
		public string description
		{
			get
			{
				return m_description;
			}
			set
			{
				if(m_description != value)
				{
					m_description = value != null ? value : "";
					mc_description = true;
					// call update worker thread;
				}
			}
		}
	}
}
