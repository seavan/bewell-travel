/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.bewell;
using meridian.bewell.system;

namespace meridian.bewell.proto
{
	[MetadataType(typeof(changelog_meta))]	public partial class changelog : admin.db.IDatabaseEntity
	{
		public changelog()
		{
		}
		private int m_changeid = 0;
		internal bool mc_changeid { get; private set; }
		private string m_folder = "";
		internal bool mc_folder { get; private set; }
		private int m_scriptnumber = 0;
		internal bool mc_scriptnumber { get; private set; }
		private string m_scriptname = "";
		internal bool mc_scriptname { get; private set; }
		private DateTime m_startdate = DateTime.MinValue;
		internal bool mc_startdate { get; private set; }
		private DateTime m_completedate = DateTime.MinValue;
		internal bool mc_completedate { get; private set; }
		private string m_appliedby = "";
		internal bool mc_appliedby { get; private set; }
		private byte m_scriptstatus = (byte)0;
		internal bool mc_scriptstatus { get; private set; }
		private string m_scriptoutput = "";
		internal bool mc_scriptoutput { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_changeid = _reader["changeid"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("changeid") : 0;
			mc_changeid = false;
			m_folder = _reader["folder"].GetType() != typeof(System.DBNull) ? _reader.GetString("folder") : "";
			mc_folder = false;
			m_scriptnumber = _reader["scriptnumber"].GetType() != typeof(System.DBNull) ? _reader.GetInt32("scriptnumber") : 0;
			mc_scriptnumber = false;
			m_scriptname = _reader["scriptname"].GetType() != typeof(System.DBNull) ? _reader.GetString("scriptname") : "";
			mc_scriptname = false;
			m_startdate = _reader["startdate"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("startdate") : DateTime.MinValue;
			mc_startdate = false;
			m_completedate = _reader["completedate"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("completedate") : DateTime.MinValue;
			mc_completedate = false;
			m_appliedby = _reader["appliedby"].GetType() != typeof(System.DBNull) ? _reader.GetString("appliedby") : "";
			mc_appliedby = false;
			m_scriptstatus = _reader["scriptstatus"].GetType() != typeof(System.DBNull) ? _reader.GetByte("scriptstatus") : (byte)0;
			mc_scriptstatus = false;
			m_scriptoutput = _reader["scriptoutput"].GetType() != typeof(System.DBNull) ? _reader.GetString("scriptoutput") : "";
			mc_scriptoutput = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
		}
		public void DeleteAggregations()
		{
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "changelog"; }
		}
		/* metafile template 
		internal class changelog_meta
		{
			public int changeid { get; set; }
			public string folder { get; set; }
			public int scriptnumber { get; set; }
			public string scriptname { get; set; }
			public DateTime startdate { get; set; }
			public DateTime completedate { get; set; }
			public string appliedby { get; set; }
			public byte scriptstatus { get; set; }
			public string scriptoutput { get; set; }
		}
		 metafile template */
		public int changeid
		{
			get
			{
				return m_changeid;
			}
			set
			{
				if(m_changeid != value)
				{
					m_changeid = value != null ? value : 0;
					mc_changeid = true;
					// call update worker thread;
				}
			}
		}
		public string folder
		{
			get
			{
				return m_folder;
			}
			set
			{
				if(m_folder != value)
				{
					m_folder = value != null ? value : "";
					mc_folder = true;
					// call update worker thread;
				}
			}
		}
		public int scriptnumber
		{
			get
			{
				return m_scriptnumber;
			}
			set
			{
				if(m_scriptnumber != value)
				{
					m_scriptnumber = value != null ? value : 0;
					mc_scriptnumber = true;
					// call update worker thread;
				}
			}
		}
		public string scriptname
		{
			get
			{
				return m_scriptname;
			}
			set
			{
				if(m_scriptname != value)
				{
					m_scriptname = value != null ? value : "";
					mc_scriptname = true;
					// call update worker thread;
				}
			}
		}
		public DateTime startdate
		{
			get
			{
				return m_startdate;
			}
			set
			{
				if(m_startdate != value)
				{
					m_startdate = value != null ? value : DateTime.MinValue;
					if(m_startdate.Year < 1800) m_startdate = DateTime.MinValue;
					mc_startdate = true;
					// call update worker thread;
				}
			}
		}
		public DateTime completedate
		{
			get
			{
				return m_completedate;
			}
			set
			{
				if(m_completedate != value)
				{
					m_completedate = value != null ? value : DateTime.MinValue;
					if(m_completedate.Year < 1800) m_completedate = DateTime.MinValue;
					mc_completedate = true;
					// call update worker thread;
				}
			}
		}
		public string appliedby
		{
			get
			{
				return m_appliedby;
			}
			set
			{
				if(m_appliedby != value)
				{
					m_appliedby = value != null ? value : "";
					mc_appliedby = true;
					// call update worker thread;
				}
			}
		}
		public byte scriptstatus
		{
			get
			{
				return m_scriptstatus;
			}
			set
			{
				if(m_scriptstatus != value)
				{
					m_scriptstatus = value != null ? value : (byte)0;
					mc_scriptstatus = true;
					// call update worker thread;
				}
			}
		}
		public string scriptoutput
		{
			get
			{
				return m_scriptoutput;
			}
			set
			{
				if(m_scriptoutput != value)
				{
					m_scriptoutput = value != null ? value : "";
					mc_scriptoutput = true;
					// call update worker thread;
				}
			}
		}
	}
}
