/* Automatically generated codefile, Meridian
 * Generated by magic, please do not interfere
 * Please sleep well and do not smoke. Love, Sam */

using System;
using System.Linq;
using System.Text;
using System.Data.Linq;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Script.Serialization;
using MySql.Data.MySqlClient;
using meridian.bewell;
using meridian.bewell.system;

namespace meridian.bewell.proto
{
	[MetadataType(typeof(news_meta))]	public partial class news : admin.db.IDatabaseEntity
	{
		public news()
		{
		}
		private long m_id = 0;
		internal bool mc_id { get; private set; }
		private long m_category_id = 0;
		internal bool mc_category_id { get; private set; }
		private string m_title = "";
		internal bool mc_title { get; private set; }
		private string m_announce = "";
		internal bool mc_announce { get; private set; }
		private string m_text = "";
		internal bool mc_text { get; private set; }
		private DateTime m_publish_date = DateTime.MinValue;
		internal bool mc_publish_date { get; private set; }
		private bool m_is_published = false;
		internal bool mc_is_published { get; private set; }
		private string m_preview = "";
		internal bool mc_preview { get; private set; }
		public void LoadFromReader(MySqlDataReader _reader)
		{
			m_id = _reader["id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("id") : 0;
			mc_id = false;
			m_category_id = _reader["category_id"].GetType() != typeof(System.DBNull) ? _reader.GetInt64("category_id") : 0;
			mc_category_id = false;
			m_title = _reader["title"].GetType() != typeof(System.DBNull) ? _reader.GetString("title") : "";
			mc_title = false;
			m_announce = _reader["announce"].GetType() != typeof(System.DBNull) ? _reader.GetString("announce") : "";
			mc_announce = false;
			m_text = _reader["text"].GetType() != typeof(System.DBNull) ? _reader.GetString("text") : "";
			mc_text = false;
			m_publish_date = _reader["publish_date"].GetType() != typeof(System.DBNull) ? _reader.GetDateTime("publish_date") : DateTime.MinValue;
			mc_publish_date = false;
			m_is_published = _reader["is_published"].GetType() != typeof(System.DBNull) ? _reader.GetBoolean("is_published") : false;
			mc_is_published = false;
			m_preview = _reader["preview"].GetType() != typeof(System.DBNull) ? _reader.GetString("preview") : "";
			mc_preview = false;
		}
		public void LoadAggregations(Meridian _meridian)
		{
			if((category_id > 0) && (_meridian.news_categoriesStore.Exists(category_id)))
			{
				this.news_categories_news_news_categories = _meridian.news_categoriesStore.Get(category_id);;
				this.news_categories_news_news_categories.AddNews(this);
			}
		}
		public void DeleteAggregations()
		{
			if(this.news_categories_news_news_categories != null)
			{
				this.news_categories_news_news_categories.RemoveNews(this);
			}
		}
		public void LoadCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public void SaveCompositions(Meridian _meridian)
		{
		}
		public void DeleteCompositions(Meridian _meridian)
		{
			string[] keyIds = null;
		}
		public string ProtoName
		{
			get { return "news"; }
		}
		/* metafile template 
		internal class news_meta
		{
			public long id { get; set; }
			public long category_id { get; set; }
			public string title { get; set; }
			public string announce { get; set; }
			public string text { get; set; }
			public DateTime publish_date { get; set; }
			public bool is_published { get; set; }
			public string preview { get; set; }
		}
		 metafile template */
		public long id
		{
			get
			{
				return m_id;
			}
			set
			{
				if(m_id != value)
				{
					m_id = value != null ? value : 0;
					mc_id = true;
					// call update worker thread;
				}
			}
		}
		public long category_id
		{
			get
			{
				return m_category_id;
			}
			set
			{
				if(m_category_id != value)
				{
					m_category_id = value != null ? value : 0;
					mc_category_id = true;
					// call update worker thread;
				}
			}
		}
		public string title
		{
			get
			{
				return m_title;
			}
			set
			{
				if(m_title != value)
				{
					m_title = value != null ? value : "";
					mc_title = true;
					// call update worker thread;
				}
			}
		}
		public string announce
		{
			get
			{
				return m_announce;
			}
			set
			{
				if(m_announce != value)
				{
					m_announce = value != null ? value : "";
					mc_announce = true;
					// call update worker thread;
				}
			}
		}
		public string text
		{
			get
			{
				return m_text;
			}
			set
			{
				if(m_text != value)
				{
					m_text = value != null ? value : "";
					mc_text = true;
					// call update worker thread;
				}
			}
		}
		public DateTime publish_date
		{
			get
			{
				return m_publish_date;
			}
			set
			{
				if(m_publish_date != value)
				{
					m_publish_date = value != null ? value : DateTime.MinValue;
					if(m_publish_date.Year < 1800) m_publish_date = DateTime.MinValue;
					mc_publish_date = true;
					// call update worker thread;
				}
			}
		}
		public bool is_published
		{
			get
			{
				return m_is_published;
			}
			set
			{
				if(m_is_published != value)
				{
					m_is_published = value != null ? value : false;
					mc_is_published = true;
					// call update worker thread;
				}
			}
		}
		public string preview
		{
			get
			{
				return m_preview;
			}
			set
			{
				if(m_preview != value)
				{
					m_preview = value != null ? value : "";
					mc_preview = true;
					// call update worker thread;
				}
			}
		}
		private news_categories news_categories_news_news_categories
		{
			get; set; 
		}
		public news_categories GetNewsNews_categorie()
		{
			return news_categories_news_news_categories ;
		}
	}
}
